["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$cat","~$*","~$or","~$merge","~$keys","~$+","~$and","~$def"]],"~:name","~$cljs.spec.alpha","~:imports",null,"~:requires",["^ ","~$cljs.core","^A","~$gobj","~$goog.object","^C","^C","~$walk","~$clojure.walk","~$gen","~$cljs.spec.gen.alpha","~$c","^A","~$str","~$clojure.string","^I","^I","^E","^E","^G","^G"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$form",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","~:line",181,"~:column",7,"~:end-line",181,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^V",[["~$spec"]]]]],"~:doc","returns the spec as data"],"^=","~$cljs.spec.alpha/form","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",11,"~:method-params",["^V",[["^X"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^R",1,"~:variadic?",false,"^Q",181,"~:ret-tag","~$any","^S",181,"~:max-fixed-arity",1,"~:fn-var",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","returns the spec as data"],"~$nilable-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1407,"^R",19,"^S",1407,"^T",31,"~:skip-wiki",true,"^U",["^V",["^W",["^V",[["^M","~$pred","~$gfn"]]]]],"^Y","Do not call this directly, use 'nilable'"],"^=","~$cljs.spec.alpha/nilable-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",31,"^[",["^V",[["^M","^19","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1407,"^13","~$cljs.spec.alpha/t_cljs$spec$alpha14802","^S",1407,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^M","^19","^1:"]]]]],"^Y","Do not call this directly, use 'nilable'"],"~$->t_cljs$spec$alpha14500",["^ ","^N",null,"^O",["^ ","~:anonymous",true,"~:protocols",["^6",["~$cljs.spec.alpha/Spec","~$cljs.core/IMeta","~$cljs.spec.alpha/Specize","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^6",["^1A","^1C"]],"~:factory","~:positional","^U",["^V",["^W",["^V",[["~$forms","~$preds","^1:","~$specs","~$cnt","~$meta14501"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14500.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14500","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^1G","^1H","^1:","^1I","^1J","^1K"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",6,"^12",false,"^1E","^1F","^Q",600,"^13","~$cljs.spec.alpha/t_cljs$spec$alpha14500","^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:","^1I","^1J","^1K"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14500."],"~$*recursion-limit*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",21,"^R",16,"^S",21,"^T",33,"~:dynamic",true],"^=","~$cljs.spec.alpha/*recursion-limit*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",33,"^R",1,"^1O",true,"^Q",21,"^S",21,"~:tag","~$number","^Y","A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."],"~$*coll-error-limit*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",35,"^R",16,"^S",35,"^T",34,"^1O",true],"^=","~$cljs.spec.alpha/*coll-error-limit*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^R",1,"^1O",true,"^Q",35,"^S",35,"^1Q","^1R","^Y","The number of errors reported by explain in a collection spec'ed with 'every'"],"~$empty-coll",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",841,"^R",16,"^S",841,"^T",26,"~:private",true],"^1V",true,"^=","~$cljs.spec.alpha/empty-coll","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",26,"^R",1,"^Q",841,"^S",841,"^1Q","~$cljs.core/IMap"],"~$t_cljs$spec$alpha14419",["^ ","~:num-fields",19,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/t_cljs$spec$alpha14419","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","~:type",true,"^1>",true,"^R",5,"^Q",430,"~:record",false,"^1Q","~$function","^1D",["^6",["^1A","^1C"]]],"~$explain-printer",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",235,"^R",7,"^S",235,"^T",22,"^U",["^V",["^W",["^V",[["~$ed"]]]]],"^Y","Default printer for explain-data. nil indicates a successful validation."],"^=","~$cljs.spec.alpha/explain-printer","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",22,"^[",["^V",[["^24"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",235,"^13","~$clj-nil","^S",235,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^24"]]]]],"^Y","Default printer for explain-data. nil indicates a successful validation."],"~$op-explain",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1159,"^R",8,"^S",1159,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["^M","~$p","~$path","~$via","~$in","~$input"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/op-explain","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^M","~$p","^28","^29","^2:","^2;"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1159,"^13",["^6",["~$cljs.core/IVector","^14","^26"]],"^S",1159,"^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^M","~$p","^28","^29","^2:","^2;"]]]]]],"~$Specize",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",131,"^R",14,"^S",131,"^T",21,"~:protocol-symbol",true,"~:jsdoc",["^V",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$specize*",[["~$_"],["~$_","^M"]]]]],"^2?",true,"^=","^1B","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",21,"^R",1,"^Q",131,"^2A",["^ ","^2B",["^ ","^2C",[["~$_"],["~$_","^M"]]]],"~:info",null,"^S",131,"^1Q","^14","~:impls",["^6",["^1M","^1<","~$cljs.core/Keyword","~$cljs.spec.alpha/t_cljs$spec$alpha14799","~$cljs.spec.alpha/t_cljs$spec$alpha14767","~$default","~$cljs.spec.alpha/t_cljs$spec$alpha14475","~$cljs.spec.alpha/t_cljs$spec$alpha14486","~$cljs.core/PersistentHashSet","~$cljs.spec.alpha/t_cljs$spec$alpha14593","^1[","~$cljs.core/PersistentTreeSet","~$cljs.spec.alpha/t_cljs$spec$alpha14581","~$cljs.core/Symbol","~$cljs.spec.alpha/t_cljs$spec$alpha14567","~$cljs.spec.alpha/t_cljs$spec$alpha14774","~$cljs.spec.alpha/t_cljs$spec$alpha14509"]],"^2@",["^V",["@interface"]]],"~$t_cljs$spec$alpha14799",["^ ","^1Z",2,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2G","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",5,"^Q",1391,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$alt-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1044,"^R",19,"^S",1044,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["~$ks","~$ps","^1G"]]]]],"^Y","Do not call this directly, use 'alt'"],"^=","~$cljs.spec.alpha/alt-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["^2V","^2W","^1G"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1044,"^13",["^6",["~$clj","^14"]],"^S",1044,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^2V","^2W","^1G"]]]]],"^Y","Do not call this directly, use 'alt'"],"~$tagged-ret",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",656,"^R",8,"^S",656,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["~$tag","~$ret"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/tagged-ret","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^2[","^30"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",656,"^13","~$cljs.core/MapEntry","^S",656,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^2[","^30"]]]]]],"~$pvalid?",["^ ","^N",null,"^O",["^ ","^1V",true,"^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"~:top-fn",["^ ","^12",false,"~:fixed-arity",3,"^15",3,"^[",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^U",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^11",["^V",[null,null]]],"^R",8,"^Q",380,"^S",380,"^U",["^V",["^W",["^V",[["^19","~$x"],["^19","~$x","^M"]]]]],"^Y","internal helper function that returns true when x is valid for spec."],"^1V",true,"^=","~$cljs.spec.alpha/pvalid?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^U",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^10",null,"^35",3,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",2,"^12",false,"^1Q","~$boolean"],["^ ","^35",3,"^12",false,"^1Q","^37"]],"^Q",380,"^S",380,"^15",3,"^16",true,"^U",["^V",[["^19","~$x"],["^19","~$x","^M"]]],"^Y","internal helper function that returns true when x is valid for spec."],"~$def-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",306,"^R",19,"^S",306,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["~$k","^M","^X"]]]]],"^Y","Do not call this directly, use 'def'"],"^=","~$cljs.spec.alpha/def-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["~$k","^M","^X"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",306,"^S",306,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["~$k","^M","^X"]]]]],"^Y","Do not call this directly, use 'def'"],"~$*explain-out*",["^ ","^=","~$cljs.spec.alpha/*explain-out*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",262,"^R",1,"^S",262,"^T",29,"^1O",true,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",262,"^R",16,"^S",262,"^T",29,"^1O",true]],"~$*runtime-asserts*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1479,"^R",3,"^S",1479,"^T",20,"^1V",true,"^1O",true],"^1V",true,"^=","~$cljs.spec.alpha/*runtime-asserts*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^R",1,"^1O",true,"^Q",1477,"^S",1479,"^1Q","^37"],"~$regex-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1291,"^R",19,"^S",1291,"^T",34,"^18",true,"^U",["^V",["^W",["^V",[["~$re","^1:"]]]]],"^Y","Do not call this directly, use 'spec' with a regex op argument"],"^=","~$cljs.spec.alpha/regex-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^[",["^V",[["^3?","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1291,"^13","^2H","^S",1291,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^3?","^1:"]]]]],"^Y","Do not call this directly, use 'spec' with a regex op argument"],"~$merge-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",813,"^R",19,"^S",813,"^T",34,"^18",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'merge'"],"^=","~$cljs.spec.alpha/merge-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^[",["^V",[["^1G","^1H","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",813,"^13","^2O","^S",813,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'merge'"],"~$explain-data*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",219,"^R",7,"^S",219,"^T",20,"^U",["^V",["^W",["^V",[["^X","^28","^29","^2:","~$x"]]]]]],"^=","~$cljs.spec.alpha/explain-data*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^X","^28","^29","^2:","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",219,"^13",["^6",["^1X","^26"]],"^S",219,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^X","^28","^29","^2:","~$x"]]]]]],"~$add-ret",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1110,"^R",8,"^S",1110,"^T",15,"^1V",true,"^U",["^V",["^W",["^V",[["~$p","~$r","~$k"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/add-ret","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["~$p","~$r","~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1110,"^13",["^6",[null,"^2Y","^14"]],"^S",1110,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["~$p","~$r","~$k"]]]]]],"~$explain-pred-list",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",738,"^R",8,"^S",738,"^T",25,"^1V",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^28","^29","^2:","~$x"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/explain-pred-list","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",25,"^[",["^V",[["^1G","^1H","^28","^29","^2:","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",738,"^13",["^6",["^2=","^14","^26"]],"^S",738,"^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^28","^29","^2:","~$x"]]]]]],"~$MAX_INT",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",19,"^R",14,"^S",19,"^T",21,"~:const",true],"^=","~$cljs.spec.alpha/MAX_INT","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",21,"~:const-expr",["^ ","~:op","^3J","~:val",9007199254740991,"~:env",["^ ","~:context","~:expr"],"~:form",9007199254740991,"^1Q","^1R"],"^R",1,"^3J",true,"^Q",19,"^S",19,"^1Q","^1R"],"~$check-asserts",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1487,"^R",7,"^S",1487,"^T",20,"^U",["^V",["^W",["^V",[["~$flag"]]]]],"^Y","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"^=","~$cljs.spec.alpha/check-asserts","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^3T"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1487,"^S",1487,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^3T"]]]]],"^Y","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"~$alt2",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1042,"^R",8,"^S",1042,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["~$p1","~$p2"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/alt2","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["^3W","^3X"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1042,"^13",["^6",[null,"^14","^1X","^26"]],"^S",1042,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^3W","^3X"]]]]]],"~$and-k-gen",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",417,"^R",8,"^S",417,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["~$s"]]]]],"^Y","returns a tuple generator made up of generators for every element\n  in s."],"^1V",true,"^=","~$cljs.spec.alpha/and-k-gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["~$s"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",417,"^13","^14","^S",417,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$s"]]]]],"^Y","returns a tuple generator made up of generators for every element\n  in s."],"~$assert*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1495,"^R",7,"^S",1495,"^T",14,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Do not call this directly, use 'assert'."],"^=","~$cljs.spec.alpha/assert*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1495,"^S",1495,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Do not call this directly, use 'assert'."],"~$fn-sym",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",123,"^R",8,"^S",123,"^T",14,"^1V",true,"^U",["^V",["^W",["^V",[["~$f-n"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/fn-sym","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^43"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",123,"^13",["^6",["^14","^2P","^26"]],"^S",123,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^43"]]]]]],"~$inst-in-range?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1442,"^R",7,"^S",1442,"^T",21,"^U",["^V",["^W",["^V",[["~$start","~$end","~$inst"]]]]],"^Y","Return true if inst at or after start and before end"],"^=","~$cljs.spec.alpha/inst-in-range?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",21,"^[",["^V",[["^46","^47","^48"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1442,"^13","^37","^S",1442,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^46","^47","^48"]]]]],"^Y","Return true if inst at or after start and before end"],"~$registry-ref",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",47,"^R",20,"^S",47,"^T",32,"^1V",true],"^1V",true,"^=","~$cljs.spec.alpha/registry-ref","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",32,"^R",1,"^Q",47,"^S",47,"^1Q","~$cljs.core/Atom"],"~$t_cljs$spec$alpha14767",["^ ","^1Z",3,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2H","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",3,"^Q",1294,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$accept?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",979,"^R",8,"^S",979,"^T",15,"^1V",true,"^U",["^V",["^W",["^V",[[["^ ","~:keys",["~:cljs.spec.alpha/op"]]]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/accept?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["~$p__14642"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",979,"^13","^37","^S",979,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[[["^ ","^4?",["^4@"]]]]]]]],"~$and-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",749,"^R",19,"^S",749,"^T",32,"^18",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'and'"],"^=","~$cljs.spec.alpha/and-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",32,"^[",["^V",[["^1G","^1H","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",749,"^13","^2Q","^S",749,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'and'"],"~$accept",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",977,"^R",8,"^S",977,"^T",14,"^1V",true,"^U",["^V",["^W",["^V",[["~$x"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/accept","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",977,"^13","^1X","^S",977,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$x"]]]]]],"~$recur-limit?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",351,"^R",8,"^S",351,"^T",20,"^1V",true,"^U",["^V",["^W",["^V",[["~$rmap","~$id","^28","~$k"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/recur-limit?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^4H","^4I","^28","~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",351,"^13","^37","^S",351,"^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^4H","^4I","^28","~$k"]]]]]],"~$describe*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",45,"^R",4,"^S",45,"^T",13,"~:protocol","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/describe*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["^X"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",45,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y",null],"~$map-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",423,"^R",19,"^S",423,"^T",32,"^18",true,"^U",["^V",["^W",["^V",[[["^ ","^4?",["~$req-un","~$opt-un","~$keys-pred","~$pred-exprs","~$opt-keys","~$req-specs","~$req","~$req-keys","~$opt-specs","~$pred-forms","~$opt","^1:"],"~:as","~$argm"]]]]]],"^Y","Do not call this directly, use 'spec' with a map argument"],"^=","~$cljs.spec.alpha/map-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",32,"^[",["^V",[["~$p__14416"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",423,"^13","^1[","^S",423,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[[["^ ","^4?",["^4O","^4P","^4Q","^4R","^4S","^4T","^4U","^4V","^4W","^4X","^4Y","^1:"],"^4Z","^4["]]]]]],"^Y","Do not call this directly, use 'spec' with a map argument"],"~$reg-resolve!",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",66,"^R",8,"^S",66,"^T",20,"^1V",true,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"^1V",true,"^=","~$cljs.spec.alpha/reg-resolve!","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",66,"^13",["^6",[null,"^14"]],"^S",66,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"~$t_cljs$spec$alpha14509",["^ ","^1Z",9,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2S","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",5,"^Q",697,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$->t_cljs$spec$alpha14593",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^M","~$max-count","~$map__14591","~$p__14590","~$check?","^1:","~$gen-max","^19","~$cpred","~$conform-keys","~$kind-form","~$addcv","~$cfns","~$describe-form","~$distinct","^X","~$kfn","~$gen-into","~$count","~$min-count","~$opts","~$kind","~$conform-all","~$conform-into","~$meta14594"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14593.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14593","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^M","^56","^57","^58","^59","^1:","^5:","^19","^5;","^5<","^5=","^5>","^5?","^5@","^5A","^X","^5B","^5C","^5D","^5E","^5F","^5G","^5H","^5I","^5J"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",6,"^12",false,"^1E","^1F","^Q",881,"^13","^2M","^15",25,"^16",true,"^U",["^V",["^W",["^V",[["^M","^56","^57","^58","^59","^1:","^5:","^19","^5;","^5<","^5=","^5>","^5?","^5@","^5A","^X","^5B","^5C","^5D","^5E","^5F","^5G","^5H","^5I","^5J"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14593."],"~$t_cljs$spec$alpha14500",["^ ","^1Z",6,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^1M","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",6,"^Q",600,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$re-explain",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1265,"^R",8,"^S",1265,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["^28","^29","^2:","^3?","^2;"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/re-explain","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^28","^29","^2:","^3?","^2;"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1265,"^13",["^6",["^2=","^14","^26"]],"^S",1265,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^28","^29","^2:","^3?","^2;"]]]]]],"~$alts",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1041,"^R",8,"^S",1041,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["~$&","^2W"]]]]],"^34",["^ ","^12",true,"^35",0,"^15",0,"^[",[["^V",["^2W"]]],"^U",["^V",[["~$&","^2W"]]],"^11",["^V",[null]]]],"^1V",true,"^=","~$cljs.spec.alpha/alts","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^34",["^ ","^12",true,"^35",0,"^15",0,"^[",[["^V",["^2W"]]],"^U",["^V",[["~$&","^2W"]]],"^11",["^V",[null]]],"^[",[["^V",["^2W"]]],"^10",null,"^35",0,"^11",["^V",[null]],"^R",1,"^12",true,"^2B",[["^ ","^35",0,"^12",true,"^1Q",["^6",["^14","^1X","^26"]]]],"^Q",1041,"^13","^14","^S",1041,"^15",0,"^16",true,"^U",["^V",[["~$&","^2W"]]]],"~$with-name",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",85,"^R",8,"^S",85,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["^X","~$name"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/with-name","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["^X","^5R"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",85,"^13",["^6",["^2Y","^14","^2F","^2P","~$cljs.core/MetaFn","^26"]],"^S",85,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","^5R"]]]]]],"~$explain",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",270,"^R",7,"^S",270,"^T",14,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value that fails to conform, prints an explanation to *out*."],"^=","~$cljs.spec.alpha/explain","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",270,"^13","^14","^S",270,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value that fails to conform, prints an explanation to *out*."],"~$t_cljs$spec$alpha14486",["^ ","^1Z",9,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2K","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",6,"^Q",556,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$spec-name",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",93,"^R",8,"^S",93,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["^X"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/spec-name","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["^X"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",93,"^13",["^6",["^14","^2F","^2P","^26"]],"^S",93,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^X"]]]]]],"~$map-spec",["^ ","^=","~$cljs.spec.alpha/map-spec","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",335,"^R",1,"^S",335,"^T",18,"~:declared",true,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",335,"^R",10,"^S",335,"^T",18,"^60",true]],"~$with-gen*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",44,"^R",4,"^S",44,"^T",13,"^4L","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X","^1:"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/with-gen*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["^X","^1:"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",44,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","^1:"]]]]],"^Y",null],"~$t_cljs$spec$alpha14475",["^ ","^1Z",6,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2J","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",6,"^Q",520,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$k-gen",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",397,"^R",8,"^S",397,"^T",13,"^1V",true,"^U",["^V",["^W",["^V",[["~$f"]]]]],"^Y","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"^1V",true,"^=","~$cljs.spec.alpha/k-gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["~$f"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",397,"^13",["^6",["^14","^26"]],"^S",397,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$f"]]]]],"^Y","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"~$or-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",659,"^R",19,"^S",659,"^T",31,"^18",true,"^U",["^V",["^W",["^V",[["^:","^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'or'"],"^=","~$cljs.spec.alpha/or-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",31,"^[",["^V",[["^:","^1G","^1H","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",659,"^13","^2S","^S",659,"^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^:","^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'or'"],"~$specize",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",159,"^R",8,"^S",159,"^T",15,"^1V",true,"^U",["^V",["^W",["^V",[["~$s"],["~$s","^M"]]]]],"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$s"],["~$s","^M"]]],"^U",["^V",[["~$s"],["~$s","^M"]]],"^11",["^V",[null,null]]]],"^1V",true,"^=","~$cljs.spec.alpha/specize","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$s"],["~$s","^M"]]],"^U",["^V",[["~$s"],["~$s","^M"]]],"^11",["^V",[null,null]]],"^[",["^V",[["~$s"],["~$s","^M"]]],"^10",null,"^35",2,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",1,"^12",false,"^1Q",["^6",[null,"^14","^26"]]],["^ ","^35",2,"^12",false,"^1Q",["^6",[null,"^14","^26"]]]],"^Q",159,"^S",159,"^15",2,"^16",true,"^U",["^V",[["~$s"],["~$s","^M"]]]],"~$*fspec-iterations*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",27,"^R",16,"^S",27,"^T",34,"^1O",true],"^=","~$cljs.spec.alpha/*fspec-iterations*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^R",1,"^1O",true,"^Q",27,"^S",27,"^1Q","^1R","^Y","The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"],"~$->t_cljs$spec$alpha14486",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^M","~$mmvar","~$retag","^1:","^4I","~$predx","~$dval","^2[","~$meta14487"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14486.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14486","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^M","^6=","^6>","^1:","^4I","^6?","^6@","^2[","^6A"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",6,"^12",false,"^1E","^1F","^Q",556,"^13","^2K","^15",9,"^16",true,"^U",["^V",["^W",["^V",[["^M","^6=","^6>","^1:","^4I","^6?","^6@","^2[","^6A"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14486."],"~$Spec",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",39,"^R",14,"^S",39,"^T",18,"^2?",true,"^2@",["^V",["@interface"]],"^2A",["^ ","^2B",["^ ","~$conform*",[["^X","~$x"]],"~$unform*",[["^X","~$y"]],"~$explain*",[["^X","^28","^29","^2:","~$x"]],"~$gen*",[["^X","~$overrides","^28","^4H"]],"^61",[["^X","^1:"]],"^4K",[["^X"]]]]],"^2?",true,"^=","^1@","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^R",1,"^Q",39,"^2A",["^ ","^2B",["^ ","^6D",[["^X","~$x"]],"^6E",[["^X","~$y"]],"^6F",[["^X","^28","^29","^2:","~$x"]],"^6G",[["^X","^6H","^28","^4H"]],"^61",[["^X","^1:"]],"^4K",[["^X"]]]],"^2D",null,"^S",39,"^1Q","^14","^2E",["^6",["^1M","^1<","^2G","^2H","^2J","^2K","^2M","^1[","^2O","^2Q","^2R","^2S"]],"^2@",["^V",["@interface"]]],"~$unform",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",174,"^R",7,"^S",174,"^T",13,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"^=","~$cljs.spec.alpha/unform","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",174,"^13","^14","^S",174,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"~$valid?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",371,"^R",7,"^S",371,"^T",13,"^U",["^V",["^W",["^V",[["^X","~$x"],["^X","~$x","^M"]]]]],"^Y","Helper function that returns true when x is valid for spec.","^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^U",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^11",["^V",[null,null]]]],"^=","~$cljs.spec.alpha/valid?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^U",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^10",null,"^35",3,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",2,"^12",false,"^1Q","^37"],["^ ","^35",3,"^12",false,"^1Q","^37"]],"^Q",371,"^S",371,"^15",3,"^16",true,"^U",["^V",[["^X","~$x"],["^X","~$x","^M"]]],"^Y","Helper function that returns true when x is valid for spec."],"^F",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",293,"^R",7,"^S",293,"^T",10,"^U",["^V",["^W",["^V",[["^X"],["^X","^6H"]]]]],"^Y","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)","^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["^X"],["^X","^6H"]]],"^U",["^V",[["^X"],["^X","^6H"]]],"^11",["^V",[null,null]]]],"^=","~$cljs.spec.alpha/gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",10,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["^X"],["^X","^6H"]]],"^U",["^V",[["^X"],["^X","^6H"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^X"],["^X","^6H"]]],"^10",null,"^35",2,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",1,"^12",false,"^1Q","^14"],["^ ","^35",2,"^12",false,"^1Q","^14"]],"^Q",293,"^S",293,"^15",2,"^16",true,"^U",["^V",[["^X"],["^X","^6H"]]],"^Y","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)"],"~$nonconforming",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1386,"^R",7,"^S",1386,"^T",20,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^=","~$cljs.spec.alpha/nonconforming","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^X"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1386,"^13","^2G","^S",1386,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^6E",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",41,"^R",4,"^S",41,"^T",11,"^4L","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X","~$y"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/unform*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",11,"^[",["^V",[["^X","~$y"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",41,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$y"]]]]],"^Y",null],"~$->sym",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",323,"^R",8,"^S",323,"^T",13,"^1V",true,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","Returns a symbol from a symbol or var"],"^1V",true,"^=","~$cljs.spec.alpha/->sym","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",323,"^13",["^6",[null,"^14"]],"^S",323,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","Returns a symbol from a symbol or var"],"~$abbrev",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",187,"^R",7,"^S",187,"^T",13,"^U",["^V",["^W",["^V",[["^M"]]]]]],"^=","~$cljs.spec.alpha/abbrev","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["^M"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",187,"^13",["^6",[null,"^14","^2P"]],"^S",187,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^M"]]]]]],"~$->t_cljs$spec$alpha14799",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^X","~$meta14800"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14799.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14799","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^X","^6V"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",1391,"^13","^2G","^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","^6V"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14799."],"~$regex?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",80,"^R",7,"^S",80,"^T",13,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"^=","~$cljs.spec.alpha/regex?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",80,"^13",["^6",[null,"^14"]],"^S",80,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"~$->t_cljs$spec$alpha14419",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["~$keys->specnames","^4Y","^4O","^4P","^1:","^4R","^4Q","^4[","^4S","^4T","^51","~$map__14417","^4U","^4I","^4V","^4W","~$k->s","^4X","~$meta14420"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14419.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14419","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^6[","^4Y","^4O","^4P","^1:","^4R","^4Q","^4[","^4S","^4T","^51","^70","^4U","^4I","^4V","^4W","^71","^4X","^72"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",430,"^13","^1[","^15",19,"^16",true,"^U",["^V",["^W",["^V",[["^6[","^4Y","^4O","^4P","^1:","^4R","^4Q","^4[","^4S","^4T","^51","^70","^4U","^4I","^4V","^4W","^71","^4X","^72"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14419."],"~$or-k-gen",["^ ","^N",null,"^O",["^ ","^1V",true,"^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",16,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$s"],["^5E","~$s"]]],"^U",["^V",[["~$s"],["^5E","~$s"]]],"^11",["^V",[null,null]]],"^R",8,"^Q",406,"^S",406,"^U",["^V",["^W",["^V",[["~$s"],["^5E","~$s"]]]]],"^Y","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"^1V",true,"^=","~$cljs.spec.alpha/or-k-gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",16,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$s"],["^5E","~$s"]]],"^U",["^V",[["~$s"],["^5E","~$s"]]],"^11",["^V",[null,null]]],"^[",["^V",[["~$s"],["^5E","~$s"]]],"^10",null,"^35",2,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",1,"^12",false,"^1Q","^14"],["^ ","^35",2,"^12",false,"^1Q","^14"]],"^Q",406,"^S",406,"^15",2,"^16",true,"^U",["^V",[["~$s"],["^5E","~$s"]]],"^Y","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"~$int-in-range?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1449,"^R",7,"^S",1449,"^T",20,"^U",["^V",["^W",["^V",[["^46","^47","~$val"]]]]],"^Y","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"^=","~$cljs.spec.alpha/int-in-range?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^46","^47","^77"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1449,"^13",["^6",["^37","^14"]],"^S",1449,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^46","^47","^77"]]]]],"^Y","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"~$dt",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",358,"^R",8,"^S",358,"^T",10,"^1V",true,"^U",["^V",["^W",["^V",[["^19","~$x","^M"],["^19","~$x","^M","~$cpred?"]]]]],"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]],"^U",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]],"^11",["^V",[null,null]]]],"^1V",true,"^=","~$cljs.spec.alpha/dt","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",10,"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]],"^U",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]],"^10",null,"^35",4,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",3,"^12",false,"^1Q","^14"],["^ ","^35",4,"^12",false,"^1Q",["^6",[null,"^14","^2F"]]]],"^Q",358,"^S",358,"^15",4,"^16",true,"^U",["^V",[["^19","~$x","^M"],["^19","~$x","^M","^7:"]]]],"~$preturn",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1074,"^R",8,"^S",1074,"^T",15,"^1V",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/preturn","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["~$p"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1074,"^13",["^6",[null,"^14","^2F","^32","^26"]],"^S",1074,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"~$t_cljs$spec$alpha14567",["^ ","^1Z",6,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2Q","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",5,"^Q",780,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$re-conform",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1252,"^R",8,"^S",1252,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["~$p",["~$x","~$&","~$xs","^4Z","~$data"]]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/re-conform","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["~$p","~$p__14748"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1252,"^13",["^6",[null,"^14","^2F","^32","^26"]],"^S",1252,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$p",["~$x","~$&","^7@","^4Z","^7A"]]]]]]],"~$spec?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",74,"^R",7,"^S",74,"^T",12,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","returns x if x is a spec object, else logical false"],"^=","~$cljs.spec.alpha/spec?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",74,"^13",["^6",[null,"^26"]],"^S",74,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$x"]]]]],"^Y","returns x if x is a spec object, else logical false"],"~$registry",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",318,"^R",7,"^S",318,"^T",15,"^U",["^V",["^W",["^V",[[]]]]],"^Y","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"^=","~$cljs.spec.alpha/registry","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[[]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",318,"^13","^14","^S",318,"^15",0,"^16",true,"^U",["^V",["^W",["^V",[[]]]]],"^Y","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"~$rep+impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1010,"^R",19,"^S",1010,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["^M","~$p"]]]]],"^Y","Do not call this directly, use '+'"],"^=","~$cljs.spec.alpha/rep+impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["^M","~$p"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1010,"^13",["^6",["^14","^1X","^26"]],"^S",1010,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^M","~$p"]]]]],"^Y","Do not call this directly, use '+'"],"~$deriv",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1123,"^R",8,"^S",1123,"^T",13,"^1V",true,"^U",["^V",["^W",["^V",[["~$p","~$x"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/deriv","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["~$p","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1123,"^13",["^6",[null,"^14","^1X","^26"]],"^S",1123,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$p","~$x"]]]]]],"~$->t_cljs$spec$alpha14581",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^1G","^1H","^1:","~$meta14582"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14581.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14581","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^1G","^1H","^1:","^7M"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",3,"^12",false,"^1E","^1F","^Q",816,"^13","^2O","^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:","^7M"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14581."],"~$t_cljs$spec$alpha14581",["^ ","^1Z",4,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2O","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",3,"^Q",816,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$deep-resolve",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",49,"^R",8,"^S",49,"^T",20,"^1V",true,"^U",["^V",["^W",["^V",[["~$reg","~$k"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/deep-resolve","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^[",["^V",[["^7Q","~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",49,"^S",49,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^7Q","~$k"]]]]]],"~$t_cljs$spec$alpha14774",["^ ","^1Z",9,"^1?",["^6",["^1@","^1A","^1B","^1C","~$cljs.core/ILookup"]],"^=","^2R","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",5,"^Q",1343,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C","^7T"]]],"~$exercise",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1433,"^R",7,"^S",1433,"^T",15,"^U",["^V",["^W",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]]]],"^Y","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen","^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^U",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^11",["^V",[null,null,null]]]],"^=","~$cljs.spec.alpha/exercise","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^U",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^11",["^V",[null,null,null]]],"^[",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^10",null,"^35",3,"^11",["^V",[null,null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",1,"^12",false,"^1Q","^14"],["^ ","^35",2,"^12",false,"^1Q","^14"],["^ ","^35",3,"^12",false,"^1Q","~$cljs.core/LazySeq"]],"^Q",1433,"^S",1433,"^15",3,"^16",true,"^U",["^V",[["^X"],["^X","~$n"],["^X","~$n","^6H"]]],"^Y","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen"],"~$explain-data",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",226,"^R",7,"^S",226,"^T",19,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"^=","~$cljs.spec.alpha/explain-data","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",226,"^13",["^6",["^1X","^26"]],"^S",226,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"~$tuple-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^U",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^11",["^V",[null,null]]],"^18",true,"^R",19,"^Q",594,"^S",594,"^U",["^V",["^W",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]]]],"^Y","Do not call this directly, use 'tuple'"],"^=","~$cljs.spec.alpha/tuple-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^34",["^ ","^12",false,"^35",3,"^15",3,"^[",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^U",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^10",null,"^35",3,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",2,"^12",false,"^1Q","^14"],["^ ","^35",3,"^12",false,"^1Q","^1M"]],"^Q",594,"^S",594,"^15",3,"^16",true,"^U",["^V",[["^1G","^1H"],["^1G","^1H","^1:"]]],"^Y","Do not call this directly, use 'tuple'"],"~$multi-spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^U",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^11",["^V",[null,null]]],"^18",true,"^R",19,"^Q",544,"^S",544,"^U",["^V",["^W",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]]]],"^Y","Do not call this directly, use 'multi-spec'"],"^=","~$cljs.spec.alpha/multi-spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^U",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^10",null,"^35",4,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",3,"^12",false,"^1Q","^14"],["^ ","^35",4,"^12",false,"^1Q","^2K"]],"^Q",544,"^S",544,"^15",4,"^16",true,"^U",["^V",[["^M","^6=","^6>"],["^M","^6=","^6>","^1:"]]],"^Y","Do not call this directly, use 'multi-spec'"],"~$conform",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",168,"^R",7,"^S",168,"^T",14,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"^=","~$cljs.spec.alpha/conform","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",168,"^13","^14","^S",168,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"~$->t_cljs$spec$alpha14509",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^:","^1G","^1H","^1:","^4I","~$kps","^1I","~$cform","~$meta14510"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14509.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14509","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^:","^1G","^1H","^1:","^4I","^85","^1I","^86","^87"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",697,"^13","^2S","^15",9,"^16",true,"^U",["^V",["^W",["^V",[["^:","^1G","^1H","^1:","^4I","^85","^1I","^86","^87"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14509."],"^6G",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",43,"^R",4,"^S",43,"^T",8,"^4L","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X","^6H","^28","^4H"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/gen*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",8,"^[",["^V",[["^X","^6H","^28","^4H"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",43,"^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^X","^6H","^28","^4H"]]]]],"^Y",null],"~$fspec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1339,"^R",19,"^S",1339,"^T",29,"^18",true,"^U",["^V",["^W",["^V",[["~$argspec","~$aform","~$retspec","~$rform","~$fnspec","~$fform","^1:"]]]]],"^Y","Do not call this directly, use 'fspec'"],"^=","~$cljs.spec.alpha/fspec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^[",["^V",[["^8;","^8<","^8=","^8>","^8?","^8@","^1:"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1339,"^13","^2R","^S",1339,"^15",7,"^16",true,"^U",["^V",["^W",["^V",[["^8;","^8<","^8=","^8>","^8?","^8@","^1:"]]]]],"^Y","Do not call this directly, use 'fspec'"],"~$->t_cljs$spec$alpha14567",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^1G","^1H","^1:","^1I","^86","~$meta14568"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14567.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14567","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^1G","^1H","^1:","^1I","^86","^8C"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",780,"^13","^2Q","^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^1G","^1H","^1:","^1I","^86","^8C"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14567."],"~$inck",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",355,"^R",8,"^S",355,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["~$m","~$k"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/inck","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["~$m","~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",355,"^13",["^6",["^2Y","^14"]],"^S",355,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$m","~$k"]]]]]],"~$*coll-check-limit*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",31,"^R",16,"^S",31,"^T",34,"^1O",true],"^=","~$cljs.spec.alpha/*coll-check-limit*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",34,"^R",1,"^1O",true,"^Q",31,"^S",31,"^1Q","^1R","^Y","The number of items validated in a collection spec'ed with 'every'"],"~$get-spec",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",330,"^R",7,"^S",330,"^T",15,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","Returns spec registered for keyword/symbol/var k, or nil."],"^=","~$cljs.spec.alpha/get-spec","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",330,"^13",["^6",["^14","^26"]],"^S",330,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","Returns spec registered for keyword/symbol/var k, or nil."],"~$->t_cljs$spec$alpha14475",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^M","^19","^1:","^7:","~$unc","~$meta14476"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14475.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14475","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^M","^19","^1:","^7:","^8L","^8M"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",6,"^12",false,"^1E","^1F","^Q",520,"^13","^2J","^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^M","^19","^1:","^7:","^8L","^8M"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14475."],"~$gensub",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",282,"^R",8,"^S",282,"^T",14,"^1V",true,"^U",["^V",["^W",["^V",[["^X","^6H","^28","^4H","^M"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/gensub","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^X","^6H","^28","^4H","^M"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",282,"^13","^14","^S",282,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^X","^6H","^28","^4H","^M"]]]]]],"~$the-spec",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",116,"^R",8,"^S",116,"^T",16,"^1V",true,"^U",["^V",["^W",["^V",[["~$spec-or-k"]]]]],"^Y","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"^1V",true,"^=","~$cljs.spec.alpha/the-spec","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",16,"^[",["^V",[["^8R"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",116,"^13",["^6",["^14","^26"]],"^S",116,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^8R"]]]]],"^Y","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"~$coll-prob",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",793,"^R",8,"^S",793,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["~$x","^5B","~$kform","^5A","^5D","^5E","^56","^28","^29","^2:"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/coll-prob","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["~$x","^5B","^8U","^5A","^5D","^5E","^56","^28","^29","^2:"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",793,"^13",["^6",["^2=","^14","^26"]],"^S",793,"^15",10,"^16",true,"^U",["^V",["^W",["^V",[["~$x","^5B","^8U","^5A","^5D","^5E","^56","^28","^29","^2:"]]]]]],"~$->t_cljs$spec$alpha14802",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^M","^19","^1:","^X","~$meta14803"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14802.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14802","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^M","^19","^1:","^X","^8X"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",1411,"^13","^1<","^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^M","^19","^1:","^X","^8X"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14802."],"~$every-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","~:into","^5@","~:cljs.spec.alpha/describe","^4?",["^5G","~:cljs.spec.alpha/kind-form","^5D","^56","^5E","^5A","^5:","~:cljs.spec.alpha/kfn","~:cljs.spec.alpha/cpred","^5<","~:cljs.spec.alpha/conform-all"],"~:or",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^U",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^11",["^V",[null,null]]],"^18",true,"^R",19,"^Q",843,"^S",843,"^U",["^V",["^W",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]]]],"^Y","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"^=","~$cljs.spec.alpha/every-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^34",["^ ","^12",false,"^35",4,"^15",4,"^[",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^U",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^10",null,"^35",4,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",3,"^12",false,"^1Q","^14"],["^ ","^35",4,"^12",false,"^1Q","^2M"]],"^Q",843,"^S",843,"^15",4,"^16",true,"^U",["^V",[["^M","^19","^5F"],["^M","^19",["^ ","^5I","^8[","^5@","^90","^4?",["^5G","^91","^5D","^56","^5E","^5A","^5:","^92","^93","^5<","^94"],"^95",["^ ","^5:",20],"^4Z","^5F"],"^1:"]]],"^Y","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"~$accept-nil?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1060,"^R",8,"^S",1060,"^T",19,"^1V",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/accept-nil?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["~$p"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1060,"^13",["^6",["^37","^14","^26"]],"^S",1060,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"~$->t_cljs$spec$alpha14767",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^1D",["^6",["^1A","^1C"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^3?","^1:","~$meta14768"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14767.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14767","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^3?","^1:","^9:"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",3,"^12",false,"^1E","^1F","^Q",1294,"^13","^2H","^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^3?","^1:","^9:"]]]]],"^1D",["^6",["^1A","^1C"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14767."],"~$maybe-spec",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",105,"^R",8,"^S",105,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["^8R"]]]]],"^Y","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"^1V",true,"^=","~$cljs.spec.alpha/maybe-spec","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^8R"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",105,"^13",["^6",[null,"^2Y","^14","^2F","^2P","^5T","^26"]],"^S",105,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^8R"]]]]],"^Y","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"~$spec-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",28,"^34",["^ ","^12",false,"^35",5,"^15",5,"^[",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^U",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^11",["^V",[null,null]]],"^18",true,"^R",19,"^Q",511,"^S",511,"^U",["^V",["^W",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]]]],"^Y","Do not call this directly, use 'spec'"],"^=","~$cljs.spec.alpha/spec-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",28,"^34",["^ ","^12",false,"^35",5,"^15",5,"^[",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^U",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^10",null,"^35",5,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",4,"^12",false,"^1Q","^14"],["^ ","^35",5,"^12",false,"^1Q",["^6",[null,"^2Y","^14","^2J","^26"]]]],"^Q",511,"^S",511,"^15",5,"^16",true,"^U",["^V",[["^M","^19","^1:","^7:"],["^M","^19","^1:","^7:","^8L"]]],"^Y","Do not call this directly, use 'spec'"],"~$invalid?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",163,"^R",7,"^S",163,"^T",15,"^U",["^V",["^W",["^V",[["^30"]]]]],"^Y","tests the validity of a conform return value"],"^=","~$cljs.spec.alpha/invalid?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["^30"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",163,"^13","^37","^S",163,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^30"]]]]],"^Y","tests the validity of a conform return value"],"~$amp-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1015,"^R",19,"^S",1015,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["^3?","~$re-form","^1H","^4X"]]]]],"^Y","Do not call this directly, use '&'"],"^=","~$cljs.spec.alpha/amp-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["^3?","^9C","^1H","^4X"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1015,"^13","^1X","^S",1015,"^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^3?","^9C","^1H","^4X"]]]]],"^Y","Do not call this directly, use '&'"],"~$pcat*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",982,"^R",8,"^S",982,"^T",13,"^1V",true,"^U",["^V",["^W",["^V",[[["~#cmap",[["^3W","~$&","~$pr","^4Z","^2W"],"~:ps",["~$k1","~$&","~$kr","^4Z","^2V"],"~:ks",["~$f1","~$&","~$fr","^4Z","^1G"],"~:forms","^30","~:ret","~$rep+","~:rep+"]]]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/pcat*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",13,"^[",["^V",[["~$p__14645"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",982,"^13",["^6",["^14","^1X","^26"]],"^S",982,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[[["^9F",[["^3W","~$&","^9G","^4Z","^2W"],"^9H",["^9I","~$&","^9J","^4Z","^2V"],"^9K",["^9L","~$&","^9M","^4Z","^1G"],"^9N","^30","^9O","^9P","^9Q"]]]]]]]],"~$alt*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1029,"^R",8,"^S",1029,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["^2W","^2V","^1G"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/alt*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["^2W","^2V","^1G"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1029,"^13",["^6",["^14","^1X","^26"]],"^S",1029,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^2W","^2V","^1G"]]]]]],"~$cat-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",994,"^R",19,"^S",994,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["^2V","^2W","^1G"]]]]],"^Y","Do not call this directly, use 'cat'"],"^=","~$cljs.spec.alpha/cat-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["^2V","^2W","^1G"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",994,"^13",["^6",["^14","^1X","^26"]],"^S",994,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["^2V","^2W","^1G"]]]]],"^Y","Do not call this directly, use 'cat'"],"~$macroexpand-check",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",337,"^R",8,"^S",337,"^T",25,"^1V",true,"^U",["^V",["^W",["^V",[["~$v","~$args"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/macroexpand-check","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",25,"^[",["^V",[["~$v","^9Y"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",337,"^13","^26","^S",337,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$v","^9Y"]]]]]],"~$reg-resolve",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",55,"^R",8,"^S",55,"^T",19,"^1V",true,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"^1V",true,"^=","~$cljs.spec.alpha/reg-resolve","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["~$k"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",55,"^13",["^6",[null,"^14","^26"]],"^S",55,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$k"]]]]],"^Y","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"~$explain-str",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",275,"^R",7,"^S",275,"^T",18,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value that fails to conform, returns an explanation as a string."],"^=","~$cljs.spec.alpha/explain-str","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",275,"^13","~$string","^S",275,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y","Given a spec and a value that fails to conform, returns an explanation as a string."],"~$*compile-asserts*",["^ ","^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1474,"^R",3,"^S",1474,"^T",20,"^1O",true,"^Y","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"^=","~$cljs.spec.alpha/*compile-asserts*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",20,"^R",1,"^1O",true,"^Q",1467,"^S",1474,"^1Q","^37","^Y","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"~$with-gen",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",211,"^R",7,"^S",211,"^T",15,"^U",["^V",["^W",["^V",[["^X","~$gen-fn"]]]]],"^Y","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^=","~$cljs.spec.alpha/with-gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["^X","^:7"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",211,"^13",["^6",["^2Y","^14"]],"^S",211,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","^:7"]]]]],"^Y","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"~$->t_cljs$spec$alpha14774",["^ ","^N",null,"^O",["^ ","^1>",true,"^1?",["^6",["^1@","^1A","^1B","^1C","^7T"]],"^1D",["^6",["^1A","^1C","^7T"]],"^1E","^1F","^U",["^V",["^W",["^V",[["^8;","^8<","^8=","^8>","^8?","^8@","^1:","^1I","~$meta14775"]]]]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14774.","^P",null],"^1?",["^6",["^1@","^1A","^1B","^1C","^7T"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha14774","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^[",["^V",[["^8;","^8<","^8=","^8>","^8?","^8@","^1:","^1I","^::"]]],"^10",null,"^11",["^V",[null,null]],"^1>",true,"^R",5,"^12",false,"^1E","^1F","^Q",1343,"^13","^2R","^15",9,"^16",true,"^U",["^V",["^W",["^V",[["^8;","^8<","^8=","^8>","^8?","^8@","^1:","^1I","^::"]]]]],"^1D",["^6",["^1A","^1C","^7T"]],"^Y","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha14774."],"^6D",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",40,"^R",4,"^S",40,"^T",12,"^4L","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/conform*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["^X","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",40,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^X","~$x"]]]]],"^Y",null],"~$check-asserts?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1482,"^R",16,"^S",1482,"^T",30,"^1Q","^37","^U",["^V",["^W",["^V",[[]]]]],"^Y","Returns the value set by check-asserts."],"^=","~$cljs.spec.alpha/check-asserts?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",30,"^[",["^V",[[]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1482,"^13","^37","^S",1482,"^15",0,"^1Q","^37","^16",true,"^U",["^V",["^W",["^V",[[]]]]],"^Y","Returns the value set by check-asserts."],"~$noret?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1052,"^R",8,"^S",1052,"^T",14,"^1V",true,"^U",["^V",["^W",["^V",[["^3W","~$pret"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/noret?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["^3W","^:@"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1052,"^13",["^6",["^37","^14","^26"]],"^S",1052,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^3W","^:@"]]]]]],"~$rep-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1006,"^R",19,"^S",1006,"^T",27,"^18",true,"^U",["^V",["^W",["^V",[["^M","~$p"]]]]],"^Y","Do not call this directly, use '*'"],"^=","~$cljs.spec.alpha/rep-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",27,"^[",["^V",[["^M","~$p"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1006,"^13",["^6",["^2Y","^14","^26"]],"^S",1006,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["^M","~$p"]]]]],"^Y","Do not call this directly, use '*'"],"~$op-describe",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1143,"^R",8,"^S",1143,"^T",19,"^1V",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/op-describe","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["~$p"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1143,"^13",["^6",[null,"^2Y","^14","^26"]],"^S",1143,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["~$p"]]]]]],"~$describe",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",206,"^R",7,"^S",206,"^T",15,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","returns an abbreviated description of the spec as data"],"^=","~$cljs.spec.alpha/describe","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",15,"^[",["^V",[["^X"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",206,"^13",["^6",[null,"^14","^2P"]],"^S",206,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","returns an abbreviated description of the spec as data"],"~$explain-1",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",387,"^R",8,"^S",387,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["^M","^19","^28","^29","^2:","~$v"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/explain-1","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["^M","^19","^28","^29","^2:","~$v"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",387,"^13",["^6",["^2=","^14"]],"^S",387,"^15",6,"^16",true,"^U",["^V",["^W",["^V",[["^M","^19","^28","^29","^2:","~$v"]]]]]],"~$explain-out",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",264,"^R",7,"^S",264,"^T",18,"^U",["^V",["^W",["^V",[["^24"]]]]],"^Y","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"^=","~$cljs.spec.alpha/explain-out","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^24"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",264,"^13","^14","^S",264,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^24"]]]]],"^Y","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"~$re-gen",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1214,"^R",8,"^S",1214,"^T",14,"^1V",true,"^U",["^V",["^W",["^V",[["~$p","^6H","^28","^4H","~$f"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/re-gen","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",14,"^[",["^V",[["~$p","^6H","^28","^4H","~$f"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1214,"^13",["^6",["^14","^26"]],"^S",1214,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["~$p","^6H","^28","^4H","~$f"]]]]]],"~$filter-alt",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1020,"^R",8,"^S",1020,"^T",18,"^1V",true,"^U",["^V",["^W",["^V",[["^2W","^2V","^1G","~$f"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/filter-alt","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",18,"^[",["^V",[["^2W","^2V","^1G","~$f"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1020,"^13","^2=","^S",1020,"^15",4,"^16",true,"^U",["^V",["^W",["^V",[["^2W","^2V","^1G","~$f"]]]]]],"~$and-preds",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",726,"^R",8,"^S",726,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["~$x","^1H","^1G"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/and-preds","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["~$x","^1H","^1G"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",726,"^13",["^6",[null,"^2F"]],"^S",726,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["~$x","^1H","^1G"]]]]]],"~$call-valid?",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1318,"^R",8,"^S",1318,"^T",19,"^1V",true,"^U",["^V",["^W",["^V",[["~$f","^1I","^9Y"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/call-valid?","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["~$f","^1I","^9Y"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1318,"^13",["^6",["^37","^26"]],"^S",1318,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["~$f","^1I","^9Y"]]]]]],"~$op-unform",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1089,"^R",8,"^S",1089,"^T",17,"^1V",true,"^U",["^V",["^W",["^V",[["~$p","~$x"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/op-unform","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",17,"^[",["^V",[["~$p","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1089,"^13",["^6",["^2=","^14"]],"^S",1089,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$p","~$x"]]]]]],"~$t_cljs$spec$alpha14593",["^ ","^1Z",25,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^2M","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",6,"^Q",881,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"~$rep*",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",999,"^R",8,"^S",999,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["^3W","^3X","^30","~$splice","^M"]]]]]],"^1V",true,"^=","~$cljs.spec.alpha/rep*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["^3W","^3X","^30","^:X","^M"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",999,"^13",["^6",["^2Y","^14","^26"]],"^S",999,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^3W","^3X","^30","^:X","^M"]]]]]],"~$t_cljs$spec$alpha14802",["^ ","^1Z",5,"^1?",["^6",["^1@","^1A","^1B","^1C"]],"^=","^1<","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^20",true,"^1>",true,"^R",5,"^Q",1411,"^21",false,"^1Q","^22","^1D",["^6",["^1A","^1C"]]],"^2C",["^ ","^N",null,"^O",["^ ","^4L","^1B","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$_"],["~$_","^M"]]],"^U",["^V",[["~$_"],["~$_","^M"]]],"^11",["^V",[null,null]]],"^R",4,"^Q",132,"^S",132,"^U",["^V",["^W",["^V",[["~$_"],["~$_","^M"]]]]],"^Y",null],"^4L","^1B","^=","~$cljs.spec.alpha/specize*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^34",["^ ","^12",false,"^35",2,"^15",2,"^[",["^V",[["~$_"],["~$_","^M"]]],"^U",["^V",[["~$_"],["~$_","^M"]]],"^11",["^V",[null,null]]],"^[",["^V",[["~$_"],["~$_","^M"]]],"^10",null,"^35",2,"^11",["^V",[null,null]],"^R",1,"^12",false,"^2B",[["^ ","^35",1,"^12",false,"^1Q","^14"],["^ ","^35",2,"^12",false,"^1Q","^14"]],"^Q",131,"^S",132,"^15",2,"^16",true,"^U",["^V",[["~$_"],["~$_","^M"]]],"^Y",null],"~$maybe-impl",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1048,"^R",19,"^S",1048,"^T",29,"^18",true,"^U",["^V",["^W",["^V",[["~$p","^M"]]]]],"^Y","Do not call this directly, use '?'"],"^=","~$cljs.spec.alpha/maybe-impl","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",29,"^[",["^V",[["~$p","^M"]]],"^10",null,"^18",true,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1048,"^13",["^6",["^2Y","^14"]],"^S",1048,"^15",2,"^16",true,"^U",["^V",["^W",["^V",[["~$p","^M"]]]]],"^Y","Do not call this directly, use '?'"],"~$pcat",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",992,"^R",8,"^S",992,"^T",12,"^1V",true,"^U",["^V",["^W",["^V",[["~$&","^2W"]]]]],"^34",["^ ","^12",true,"^35",0,"^15",0,"^[",[["^V",["^2W"]]],"^U",["^V",[["~$&","^2W"]]],"^11",["^V",[null]]]],"^1V",true,"^=","~$cljs.spec.alpha/pcat","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^34",["^ ","^12",true,"^35",0,"^15",0,"^[",[["^V",["^2W"]]],"^U",["^V",[["~$&","^2W"]]],"^11",["^V",[null]]],"^[",[["^V",["^2W"]]],"^10",null,"^35",0,"^11",["^V",[null]],"^R",1,"^12",true,"^2B",[["^ ","^35",0,"^12",true,"^1Q",["^6",["^14","^1X","^26"]]]],"^Q",992,"^13","^14","^S",992,"^15",0,"^16",true,"^U",["^V",[["~$&","^2W"]]]],"^6F",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",42,"^R",4,"^S",42,"^T",12,"^4L","^1@","^Y",null,"^U",["^V",["^W",["^V",[["^X","^28","^29","^2:","~$x"]]]]]],"^4L","^1@","^=","~$cljs.spec.alpha/explain*","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",12,"^[",["^V",[["^X","^28","^29","^2:","~$x"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",39,"^13","^14","^S",42,"^15",5,"^16",true,"^U",["^V",["^W",["^V",[["^X","^28","^29","^2:","~$x"]]]]],"^Y",null],"~$validate-fn",["^ ","^N",null,"^O",["^ ","^P","/home/ntestu/chromex/examples/sample/.cljs_nashorn_repl/cljs/spec/alpha.cljs","^Q",1329,"^R",8,"^S",1329,"^T",19,"^1V",true,"^U",["^V",["^W",["^V",[["~$f","^1I","~$iters"]]]]],"^Y","returns f if valid, else smallest"],"^1V",true,"^=","~$cljs.spec.alpha/validate-fn","^P",".cljs_nashorn_repl/cljs/spec/alpha.cljs","^T",19,"^[",["^V",[["~$f","^1I","^;6"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",1329,"^13",["^6",[null,"^14","^26"]],"^S",1329,"^15",3,"^16",true,"^U",["^V",["^W",["^V",[["~$f","^1I","^;6"]]]]],"^Y","returns f if valid, else smallest"]],"~:cljs.spec/registry-ref",[["~:cljs.spec.alpha/kvs->map",["^V",["~$cljs.spec.alpha/conformer",["^V",["~$fn*",["~$p1__14793#"],["^V",["~$cljs.core/zipmap",["^V",["~$cljs.core/map","~:cljs.spec.alpha/k","^;<"]],["^V",["^;>","~:cljs.spec.alpha/v","^;<"]]]]]],["^V",["^;;",["~$p1__14794#"],["^V",["^;>",["^V",["~$cljs.core/fn",[["~$k","~$v"]],["^ ","^;?","~$k","^;@","~$v"]]],"^;A"]]]]]]]],"~:require-macros",["^ ","~$c","^A","^A","^A","~$s","^>","^>","^>","^F","^G","^G","^G"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["^M","^2[","^56","~:args","~:cljs.spec.alpha/failure","~$cljs.spec.alpha/*","^::","~:max-tries","~:path","~:req-un","^9:","~:opt-un","^57","^8L","^58","~$cljs.spec.alpha/+","~:p2","^8C","^9O","~:cljs.spec.alpha/unknown","~$cljs.core/sequential?","~:cljs.spec.alpha/value","~:gfn","~:cljs.spec.alpha/recursion-limit","~:cljs.spec.alpha/name","^1K","~:pred-exprs","^8[","~:keys-pred","~:gen-max","~:shrunk","~:fn","~$cljs.spec.alpha/alt","~$cljs.core/vector?","^6?","^9Q","~$cljs.core/=","~:opt-keys","^8<","^6[","~:cljs.spec.alpha/rep","~:pred","^87","^6@","~:splice","^59","^1G","^;A","^4Y","~:cljs.spec.alpha/accept","^8;","~:else","^9K","~$cljs.core/count","~$cljs.spec.alpha/and","^4O","^4P","~$cljs.spec.alpha/cat","~:_","^91","~:maybe","~:via","~$cljs.spec.alpha/every","~:req-specs","~$cljs.spec.alpha/or","^1:","^;<","~:cljs.spec.alpha/gfn","^5:","^72","^8?","~$v","~:cljs.spec.alpha/spec","^4R","~:conform-keys","^4Q","^8X","^7:","~$cljs.spec.alpha/fspec","^4[","~$fn","~:amp","^3N","^8@","^4@","~$cljs.spec.alpha/nilable","^4S","^;@","~$cljs.spec.alpha/tuple","^19","~$cljs.core/map?","^93","~:p1","^;=","^5J","^6V","~:cljs.spec.alpha/problems","^5;","~$%","^;>","^;9","~$method","~:distinct","^4T","^8","~$cljs.spec.alpha/keys","^3?","^5<","^85","~:reason","^7M","~$cljs.spec.alpha/merge","~:cljs.spec.alpha/invalid","^1H","^51","^5=","~:req","^5>","^5?","~$nil?","~:assertion-failed","^;;","~$cljs.core/<=","^6O","~:cljs.spec.alpha/amp","~:id","^5@","~:min-count","~:kind","~:smallest","~$cljs.core/set?","~:count","^1J","~$cljs.core/nil?","^6=","~:req-keys","^6>","~$k","^;?","^;B","~$cljs.core/list?","^5A","^8=","~:opt-specs","~:cljs.spec.alpha/args","^8>","~$ifn?","^70","~:pred-forms","^4U","^X","^:","~$distinct?","~:max-count","^5B","^92","~:max-elements","^5C","~$cljs.spec.alpha/multi-spec","~$cljs.core/coll?","^4I","~:num-elements","^1I","^5D","^6A","^4V","~$apply","^5E","^5F","^5G","^86","~:min-elements","^4W","^5H","^94","~:cljs.spec.alpha/alt","~$cljs.core/or","^8M","^9N","~:cljs.spec.alpha/pred","^;","~:cljs.spec.alpha/nil","^9H","^71","^;:","~:in","^90","^5I","~:accept","~$cljs.spec.alpha/&","~:opt","~:cljs.spec.alpha/pcat","^4X","~$cljs.spec.alpha/?"]],"~:order",["^4@","^;T","^;O","^<O","^<C","~~:_","^=G","^;Z","^=C","^;B","^=?","^<[","^;P","^3?","^9:","^;Y","^<X","^;X","^=<","^=4","^<B","^8;","^8<","^8=","^8>","^8?","^8@","^::","^;9","^;:","^;;","^;<","^;=","^;>","^;?","^;@","^;A","~$k","~$v","^6O","^6V","^=@","^<Q","^<E","^8X","^;G","^<R"]],"^Y",null]